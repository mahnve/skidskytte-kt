buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
	}
}

plugins {
	id 'com.google.cloud.tools.jib' version '2.3.0'
}

jib {
	container.mainClass = "se.marcusahnve.SkidskytteRouletteKt"
	from.image = "amazoncorretto:17.0.6"
	to.image = 'mahnve/skidskytteroulette'
	container.ports = ["9000"]
}

repositories {
	mavenCentral()
}

apply plugin: 'kotlin'

compileKotlin.kotlinOptions.jvmTarget = "17"
compileTestKotlin.kotlinOptions.jvmTarget = "17"
compileTestKotlin.kotlinOptions.freeCompilerArgs += "-Xjvm-default=all"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

test {
	useJUnitPlatform()
}

dependencies {
	implementation "org.http4k:http4k-core:${http4kVersion}"
	implementation "org.http4k:http4k-server-undertow:${http4kVersion}"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
	implementation(platform("dev.forkhandles:forkhandles-bom:${forkhandlesVersion}"))
	implementation("dev.forkhandles:partial4k")
	testImplementation "org.http4k:http4k-testing-approval:${http4kVersion}"
	testImplementation "org.http4k:http4k-testing-hamkrest:${http4kVersion}"
	testImplementation "org.http4k:http4k-testing-kotest:${http4kVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
	testImplementation "io.kotest:kotest-runner-junit5-jvm:${kotestVersion}"
	testImplementation "io.kotest:kotest-assertions-core:${kotestVersion}"
	testImplementation "io.kotest:kotest-property:${kotestVersion}"
	testImplementation("io.kotest:kotest-framework-engine-jvm:$version")

}

